GEONAMES_ID,NAME,ASCIINAME,ALT_NAMES,LAT,LON,FEAT_CLASS,FEAT_CODE,COUNTRY_CODE,CC2,ADM1,ADM2,ADM3,ADM4,POPULATION,ELEVATION,DEM,TIMEZONE,LASTUPDATE,GEONAMES_URL,ADM5,ADM1_CODE,ADM1_GEONAMES_URL,ADM2_CODE,ADM2_GEONAMES_URL,ADM3_CODE,ADM3_GEONAMES_URL,ADM4_CODE,ADM4_GEONAMES_URL,ADM5_CODE,ADM5_GEONAMES_URL

------------------------------------------------------------
How to retrieve ADM5 of "Populated Places" (es: P-IT)
------------------------------------------------------------
* REMARK: Geonames WS have a limit of 30'000 credits per-day and 2'000 per-hour. 
Each call to the getJSON service consumes 1 credit (see https://www.geonames.org/export/credits.html).
This is why this operation is not done "bath" but it's left to OpenRefine in order to have a better control on the credits used.

Take the Populated place project (eg. IT-P-LOC) and:
1a) Remove ADM5 column and recreate it filtering by blank = false on ADM4 column and add column by fetch by URL*:
 - "http://api.geonames.org/getJSON?username=fla83tn&geonameId=" + cells["GEONAMES_ID"].value

2a) On ADM5 column, than now contains the JSON of the response, extract the "unique" ADM5 code (if any) 
       -> IMPORTANT: Set policy "blank on error" (in order to extract only P having ADM5)
 - cells["ADM4_CODE"].value + "." + value.parseJson().get("adminCode5").toString()

-----------
From the ADM dataset (eg. ADM-IT-LOC) filter by blank = false on ADM5 column and join with admin5code dataset (eg. ADM5_CODES) in order to retrieve the ADM5_CODE:
 
1b) CREATE field ADM5_CODE (that replace the existing one) with "Add Column based on this column" on GEONAMES_ID column:
  - cell.cross("ADM5_CODES", "GEONAMES_ID")[0].cells["CODE"].value
 
2b) Transform ADM5_GEONAMES_URL and fill it with the "unique" ADM5 value
  - cells["ADM4_CODE"].value + "." +cells["ADM5_CODE"].value
  
NOTE: here ADM5_GEONAMES_URL is used "improperly" as container for the ADM5 unique code but for now it's ok 
----------- 
  
3a) Return to the Populated Place project (eg. IT-P-LOC) and retrieve GEONAMES_URL of ADM5 joining with ADM dataset:
   - remove ADM5_GEONAMES_URL and recreate it from ADM5_CODE with "Add Column based on this column":
        cell.cross("IT-ADM-LOC", "ADM5_GEONAMES_URL")[0].cells["GEONAMES_URL"].value
   